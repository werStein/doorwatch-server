{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/resorts/resorts.component.css","webpack:///./src/app/admin/resorts/resorts.component.html","webpack:///./src/app/admin/resorts/resorts.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/doorwatch/about/about.component.css","webpack:///./src/app/doorwatch/about/about.component.html","webpack:///./src/app/doorwatch/about/about.component.ts","webpack:///./src/app/doorwatch/add-user/add-user.component.css","webpack:///./src/app/doorwatch/add-user/add-user.component.html","webpack:///./src/app/doorwatch/add-user/add-user.component.ts","webpack:///./src/app/doorwatch/doorwatch.component.css","webpack:///./src/app/doorwatch/doorwatch.component.html","webpack:///./src/app/doorwatch/doorwatch.component.ts","webpack:///./src/app/doorwatch/home/home.component.css","webpack:///./src/app/doorwatch/home/home.component.html","webpack:///./src/app/doorwatch/home/home.component.ts","webpack:///./src/app/doorwatch/overview/overview.component.css","webpack:///./src/app/doorwatch/overview/overview.component.html","webpack:///./src/app/doorwatch/overview/overview.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/resort.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".content {\\n  padding: 10px 20px;\\n}\\n\"","module.exports = \"<header class=\\\"header-5\\\">\\n    <div class=\\\"branding\\\">\\n      <a routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n        <clr-icon shape=\\\"users\\\" style=\\\"color: white;\\\"></clr-icon>\\n        <span class=\\\"title\\\">Admin</span>\\n      </a>\\n    </div>\\n    <div class=\\\"header-nav\\\">\\n        <a routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Home</a>\\n        <a routerLink=\\\"resorts\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Resorts</a>\\n        <a routerLink=\\\"overview\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Overview</a>\\n        <a routerLink=\\\"addUser\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Add User</a>\\n    </div>\\n    <div class=\\\"header-actions\\\">\\n        <clr-dropdown>\\n            <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n                <clr-icon shape=\\\"cog\\\"></clr-icon>\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n            </button>\\n            <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\n                <a routerLink=\\\"about\\\" clrDropdownItem>About</a>\\n                <a routerLink=\\\"home\\\" clrDropdownItem>Preferences</a>\\n                <a routerLink=\\\"/login\\\" clrDropdownItem>Log out</a>\\n            </clr-dropdown-menu>\\n        </clr-dropdown>\\n    </div>\\n  </header>\\n\\n  <main class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </main>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResortService } from '../services/resort.service';\n\n@Component({\n  selector: 'vwi-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private resortService: ResortService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"onCreateResort()\\\"><clr-icon shape=\\\"plus\\\"></clr-icon> Add Resort</button>\\n\\n<clr-datagrid>\\n\\n  <clr-dg-column>Resort</clr-dg-column>\\n  <clr-dg-column>Leader</clr-dg-column>\\n  <clr-dg-column>Change Leader</clr-dg-column>\\n  <clr-dg-column>Delete Resort</clr-dg-column>\\n\\n  <clr-dg-row *clrDgItems=\\\"let resort of resorts\\\">\\n\\n    <clr-dg-cell>{{resort.name}}</clr-dg-cell>\\n    <clr-dg-cell>{{getLeaderName(resort)}}</clr-dg-cell>\\n\\n    <clr-dg-cell>\\n      <button class=\\\"btn btn-info-outline btn-sm\\\" (click)=\\\"onChangeLeader(resort)\\\">Change Leader</button>\\n    </clr-dg-cell>\\n\\n    <clr-dg-cell>\\n      <button class=\\\"btn btn-warning-outline btn-sm\\\" (click)=\\\"onDeleteResort(resort)\\\">Delete Resort</button>\\n    </clr-dg-cell>\\n\\n\\n  </clr-dg-row>\\n\\n\\n  <clr-dg-footer>\\n    <clr-dg-pagination #pagination [clrDgPageSize]=\\\"5\\\">\\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n        of {{pagination.totalItems}} resorts\\n    </clr-dg-pagination>\\n  </clr-dg-footer>\\n</clr-datagrid>\\n\\n<!-- CHANGE LEADER MODAL -->\\n<clr-modal [(clrModalOpen)]=\\\"showLeaderModal\\\" [clrModalSize]=\\\"'lg'\\\" [clrModalStaticBackdrop]=\\\"true\\\">\\n  <h3 class=\\\"modal-title\\\">Change Leader</h3>\\n  <div class=\\\"modal-body\\\">\\n    <p>Select the user you want to be the next leader of resort <span *ngIf=\\\"assignableResort\\\">'{{assignableResort.name}}'</span></p>\\n      <select clrSelect name=\\\"options\\\" [(ngModel)]=\\\"selectedLeaderId\\\">\\n        <option *ngFor=\\\"let user of users\\\" [value]=\\\"user.id\\\">{{user.firstName}} {{user.lastName}}</option>\\n      </select>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"showLeaderModal = false\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeLeader(assignableResort, selectedLeaderId)\\\">Save</button>\\n  </div>\\n</clr-modal>\\n\\n<!-- DELETE RESORT MODAL -->\\n<clr-modal [(clrModalOpen)]=\\\"showDeleteModal\\\" [clrModalSize]=\\\"'lg'\\\" [clrModalStaticBackdrop]=\\\"true\\\">\\n  <h3 class=\\\"modal-title\\\">Delete Resort</h3>\\n  <div class=\\\"modal-body\\\">\\n      <p>Are you sure that you want to delete the resort <span *ngIf=\\\"deletableResort\\\">'{{deletableResort.name}}'</span>?</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"showDeleteModal = false\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"deleteResort(deletableResort)\\\">Delete</button>\\n  </div>\\n</clr-modal>\\n\\n<!-- CREATE RESORT MODAL -->\\n<clr-modal [(clrModalOpen)]=\\\"showNewResortModal\\\" [clrModalSize]=\\\"'lg'\\\" [clrModalStaticBackdrop]=\\\"true\\\">\\n  <h3 class=\\\"modal-title\\\">Create New Resort</h3>\\n  <div class=\\\"modal-body\\\">\\n    <label for=\\\"\\\">Resort Name:</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"newResortName\\\">\\n      <p>Select the user you want to be the leader of <span *ngIf=\\\"!newResortName\\\">the resort</span> <span *ngIf=\\\"newResortName\\\">resort '{{newResortName}}'</span></p>\\n      <select clrSelect name=\\\"options\\\" [(ngModel)]=\\\"newResortLeaderId\\\">\\n        <option *ngFor=\\\"let user of users\\\" [value]=\\\"user.id\\\">{{user.firstName}} {{user.lastName}}</option>\\n      </select>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"showNewResortModal = false\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!newResortName || !newResortLeaderId\\\" (click)=\\\"createResort(newResortName, newResortLeaderId)\\\">Save</button>\\n  </div>\\n</clr-modal>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResortService } from '../../services/resort.service';\nimport { Resort } from '../../../shared/model/resort.model';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../../shared/model/user.model';\n\n@Component({\n  selector: 'vwi-resorts',\n  templateUrl: './resorts.component.html',\n  styleUrls: ['./resorts.component.css']\n})\nexport class ResortsComponent implements OnInit {\n  resorts: Resort[] = [];\n  users: User[] = [];\n\n  showDeleteModal = false;\n  deletableResort: Resort;\n\n  showLeaderModal = false;\n  assignableResort: Resort;\n  selectedLeaderId = '';\n\n  showNewResortModal = false;\n  newResortName = '';\n  newResortLeaderId = '';\n\n  constructor(\n    private resortService: ResortService,\n    private userService: UserService\n  ) {\n    resortService.fetchResorts().subscribe(resorts => {\n      this.resorts = resorts;\n    });\n    userService.fetchUsers().subscribe(users => {\n      this.users = users;\n    });\n  }\n\n  ngOnInit() {}\n\n  onChangeLeader(resort: Resort) {\n    this.assignableResort = resort;\n    this.selectedLeaderId = resort.leaderId;\n    this.showLeaderModal = true;\n  }\n\n  changeLeader(resort: Resort, userId: string) {\n    resort.leaderId = userId;\n    this.resortService.updateResort(resort);\n    this.showLeaderModal = false;\n  }\n\n  onCreateResort() {\n    this.showNewResortModal = true;\n  }\n\n  createResort(name: string, leaderId: string) {\n    this.resortService.addResort(name, leaderId);\n    this.newResortName = '';\n    this.newResortLeaderId = this.users[0].id;\n    this.showNewResortModal = false;\n  }\n\n  onDeleteResort(resort: Resort) {\n    this.deletableResort = resort;\n    this.showDeleteModal = true;\n  }\n\n  deleteResort(resort: Resort) {\n    this.resortService.deleteResort(resort);\n    this.showDeleteModal = false;\n  }\n\n\n  getLeaderName(resort: Resort) {\n    const leader = this.userService.getUserById(resort.leaderId);\n    return leader.firstName + ' ' + leader.lastName;\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'vwi-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'doorwatch';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ClarityModule, ClrFormsModule, ClrInputModule, ClrLoadingModule, ClrRadioWrapper, ClrRadioModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { OverviewComponent } from './doorwatch/overview/overview.component';\nimport { AddUserComponent } from './doorwatch/add-user/add-user.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './doorwatch/home/home.component';\nimport { AboutComponent } from './doorwatch/about/about.component';\nimport { FormsModule } from '@angular/forms';\nimport { DoorwatchComponent } from './doorwatch/doorwatch.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ResortsComponent } from './admin/resorts/resorts.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\nimport {LoadingModule } from 'ngx-loading';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst appRoutes: Routes = [\n  {\n    path: 'dw',\n    component: DoorwatchComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'overview',\n        component: OverviewComponent\n      },\n      {\n        path: 'addUser',\n        component: AddUserComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AdminGuard],\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'resorts',\n        component: ResortsComponent\n      },\n      {\n        path: 'overview',\n        component: OverviewComponent\n      },\n      {\n        path: 'addUser',\n        component: AddUserComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminComponent,\n    OverviewComponent,\n    AddUserComponent,\n    HomeComponent,\n    AboutComponent,\n    DoorwatchComponent,\n    ResortsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ClarityModule,\n    ClrFormsModule,\n    ClrInputModule,\n    FormsModule,\n    LoadingModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vwi-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Some description text about what is happening here\\n</p>\\n\\n\\n<clr-datagrid>\\n    <clr-dg-column>Card Id</clr-dg-column>\\n    <clr-dg-column>Date</clr-dg-column>\\n    <clr-dg-column>Add User</clr-dg-column>\\n    <clr-dg-column>Delete</clr-dg-column>\\n\\n    <clr-dg-row *clrDgItems=\\\"let attempt of loginAttempts\\\">\\n      <clr-dg-cell>{{attempt.id}}</clr-dg-cell>\\n\\n      <clr-dg-cell>{{attempt.date | date:'long'}}</clr-dg-cell>\\n\\n      <clr-dg-cell>\\n        <button class=\\\"btn btn-success-outline btn-sm\\\" (click)=\\\"onAddUser(attempt)\\\">Add User</button>\\n      </clr-dg-cell>\\n\\n      <clr-dg-cell>\\n        <button class=\\\"btn btn-warning-outline btn-sm\\\" (click)=\\\"deleteLoginAttempt(attempt)\\\">Delete</button>\\n      </clr-dg-cell>\\n    </clr-dg-row>\\n\\n    <clr-dg-footer>\\n        <clr-dg-pagination #pagination [clrDgPageSize]=\\\"5\\\">\\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n            of {{pagination.totalItems}} login attempts\\n        </clr-dg-pagination>\\n      </clr-dg-footer>\\n</clr-datagrid>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"showAddUserModal\\\" [clrModalStaticBackdrop]=\\\"true\\\">\\n    <h3 class=\\\"modal-title\\\">Create New User <span *ngIf=\\\"addableAtempt\\\">for CardId {{addableAtempt.id}}</span></h3>\\n    <div class=\\\"modal-body\\\">\\n        <form clrForm>\\n            <clr-input-container>\\n                <label>First Name</label>\\n                <input clrInput type=\\\"text\\\" [(ngModel)]=\\\"addUserFirstName\\\" name=\\\"example\\\" />\\n            </clr-input-container>\\n            <clr-input-container>\\n                <label>Last Name</label>\\n                <input clrInput type=\\\"text\\\" [(ngModel)]=\\\"addUserLastName\\\" name=\\\"example\\\" />\\n            </clr-input-container>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"showAddUserModal = false\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addUserFirstName || !addUserLastName\\\" (click)=\\\"addUser(addableAtempt, addUserFirstName, addUserLastName)\\\">Create User</button>\\n    </div>\\n</clr-modal>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginAttempt } from '../../../shared/model/login-attempt.model';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../../shared/model/user.model';\nimport { Resort } from '../../../shared/model/resort.model';\nimport { ResortService } from '../../services/resort.service';\n\n@Component({\n  selector: 'vwi-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  loginAttempts: LoginAttempt[] = [];\n  resorts: Resort[] = [];\n\n  showAddUserModal = false;\n  addableAtempt: LoginAttempt;\n  addUserFirstName = '';\n  addUserLastName = '';\n  addUserResortIds = [];\n\n  constructor(private userService: UserService, private resortService: ResortService) {\n    userService.fetchLoginAttempts().subscribe(attempts => {\n      this.loginAttempts = attempts;\n    });\n    resortService.fetchResorts().subscribe(resorts => {\n      this.resorts = resorts;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  onAddUser(attempt: LoginAttempt) {\n    this.addableAtempt = attempt;\n    this.showAddUserModal = true;\n  }\n\n  addUser(attempt: LoginAttempt, firstName: string, lastName: string) {\n    this.userService.addUser(attempt, firstName, lastName);\n    this.showAddUserModal = false;\n  }\n\n  deleteLoginAttempt (attempt: LoginAttempt) {\n    this.userService.deleteLoginAttempt(attempt);\n  }\n\n}\n","module.exports = \".content {\\n  padding: 10px 20px;\\n}\\n\"","module.exports = \"<header class=\\\"header-6\\\">\\n    <div class=\\\"branding\\\">\\n      <a routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n        <clr-icon shape=\\\"users\\\" style=\\\"color: white;\\\"></clr-icon>\\n        <span class=\\\"title\\\">Doorwatch</span>\\n      </a>\\n    </div>\\n    <div class=\\\"header-nav\\\">\\n        <a routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Home</a>\\n        <a routerLink=\\\"overview\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Overview</a>\\n        <a routerLink=\\\"addUser\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Add User</a>\\n    </div>\\n    <div class=\\\"header-actions\\\">\\n        <clr-dropdown>\\n            <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n                <clr-icon shape=\\\"cog\\\"></clr-icon>\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n            </button>\\n            <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\n                <a routerLink=\\\"about\\\" clrDropdownItem>About</a>\\n                <a routerLink=\\\"home\\\" clrDropdownItem>Preferences</a>\\n                <a routerLink=\\\"/login\\\" clrDropdownItem>Log out</a>\\n            </clr-dropdown-menu>\\n        </clr-dropdown>\\n    </div>\\n  </header>\\n\\n  <main class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </main>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vwi-doorwatch',\n  templateUrl: './doorwatch.component.html',\n  styleUrls: ['./doorwatch.component.css']\n})\nexport class DoorwatchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Hey Ressortleiter!</h2>\\n<h4>Willkommen im Doorwatch-Verwaltungssystem!</h4>\\n\\n<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Doloribus dicta explicabo, fugit fuga aspernatur officiis\\n  numquam labore asperiores rem, reprehenderit perferendis accusantium? Autem, eum culpa aspernatur nihil ad iure\\n  aliquid?</p>\\n\\n<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Doloribus dicta explicabo, fugit fuga aspernatur officiis\\n  numquam labore asperiores rem, reprehenderit perferendis accusantium? Autem, eum culpa aspernatur nihil ad iure\\n  aliquid?</p>\\n\\n<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Doloribus dicta explicabo, fugit fuga aspernatur officiis\\n  numquam labore asperiores rem, reprehenderit perferendis accusantium? Autem, eum culpa aspernatur nihil ad iure\\n  aliquid?</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vwi-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<clr-datagrid>\\n\\n    <clr-dg-column>User Id</clr-dg-column>\\n    <clr-dg-column>First Name <clr-dg-string-filter [clrDgStringFilter]=\\\"firstNameFilter\\\"></clr-dg-string-filter></clr-dg-column>\\n    <clr-dg-column>Last Name <clr-dg-string-filter [clrDgStringFilter]=\\\"lastNameFilter\\\"></clr-dg-string-filter></clr-dg-column>\\n    <clr-dg-column>Resorts <clr-dg-string-filter [clrDgStringFilter]=\\\"resortFilter\\\"></clr-dg-string-filter></clr-dg-column>\\n    <clr-dg-column>Last Login</clr-dg-column>\\n    <clr-dg-column>Status</clr-dg-column>\\n    <clr-dg-column>Activate</clr-dg-column>\\n    <!-- <clr-dg-column>Delete User</clr-dg-column> -->\\n\\n    <clr-dg-row *clrDgItems=\\\"let user of users\\\">\\n      <clr-dg-cell>{{user.id}}</clr-dg-cell>\\n\\n      <clr-dg-cell>{{user.firstName}}</clr-dg-cell>\\n\\n      <clr-dg-cell>{{user.lastName}}</clr-dg-cell>\\n\\n      <clr-dg-cell>\\n        <span *ngFor=\\\"let resort of user.resortIds\\\">\\n          {{resort}}\\n        </span>\\n      </clr-dg-cell>\\n\\n      <clr-dg-cell>{{user.lastLogin | date:'fullDate'}}</clr-dg-cell>\\n\\n      <clr-dg-cell>\\n        <span *ngIf=\\\"user.deactivated\\\">Deactivated</span>\\n        <span *ngIf=\\\"!user.deactivated\\\">Not Deactivated</span>\\n      </clr-dg-cell>\\n\\n      <clr-dg-cell>\\n        <button class=\\\"btn btn-success-outline btn-sm\\\" *ngIf=\\\"user.deactivated\\\" (click)=\\\"activateUser(user)\\\">Activate</button>\\n        <button class=\\\"btn btn-warning-outline btn-sm\\\" *ngIf=\\\"!user.deactivated\\\" (click)=\\\"deactivateUser(user)\\\">Deactivate</button>\\n      </clr-dg-cell>\\n\\n      <!-- <clr-dg-cell>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteUser(user)\\\">Delete User</button>\\n      </clr-dg-cell> -->\\n    </clr-dg-row>\\n\\n    <clr-dg-footer>\\n      <clr-dg-pagination #pagination [clrDgPageSize]=\\\"5\\\">\\n          {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n          of {{pagination.totalItems}} users\\n      </clr-dg-pagination>\\n    </clr-dg-footer>\\n  </clr-datagrid>\\n\\n  <clr-modal [(clrModalOpen)]=\\\"basic\\\" [clrModalStaticBackdrop]=\\\"true\\\">\\n      <h3 class=\\\"modal-title\\\">Delete User</h3>\\n      <div class=\\\"modal-body\\\">\\n          <p>Are you sure you want to delete FIRSTNAME LASTNAME?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"basic = false\\\">Cancel</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"basic = false\\\">Delete User</button>\\n      </div>\\n  </clr-modal>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../shared/model/user.model';\nimport { UserService } from '../../services/user.service';\nimport { ClrDatagridStringFilterInterface } from '@clr/angular';\n\nclass FirstNameFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    return (\n      '' + user.firstName === search ||\n      user.firstName.toLowerCase().indexOf(search) >= 0\n    );\n  }\n}\n\nclass LastNameFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    return (\n      '' + user.lastName === search ||\n      user.lastName.toLowerCase().indexOf(search) >= 0\n    );\n  }\n}\n\nclass ResortFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    for (const resort of user.resortIds) {\n      if ('' + resort === search ||\n      resort.toLowerCase().indexOf(search) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'vwi-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n  firstNameFilter = new FirstNameFilter();\n  lastNameFilter = new LastNameFilter();\n  resortFilter = new ResortFilter();\n\n  users: User[] = [];\n  basic = false;\n\n  constructor(private userService: UserService) {\n    this.userService.fetchUsers().subscribe(users => {\n      this.users = users;\n    });\n  }\n\n  ngOnInit() {}\n\n  activateUser(user: User) {\n    this.userService.activateUser(user);\n  }\n\n  deactivateUser(user: User) {\n    this.userService.deactivateUser(user);\n  }\n\n  deleteUser(user: User) {\n    this.userService.deleteUser(user);\n  }\n\n  updateUser(user: User) {\n    this.userService.updateUser(user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      const isAuthenticated = this.authService.userIsAuthenticated();\n      const isAdmin = this.authService.userIsAdmin();\n      if (!isAuthenticated || !isAdmin) {\n        this.router.navigate(['/login']);\n      }\n    return this.authService.userIsAuthenticated() && this.authService.userIsAdmin();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const isAuthenticated = this.authService.userIsAuthenticated();\n    const isAdmin = this.authService.userIsAdmin();\n    if (!isAuthenticated || isAdmin) {\n      this.router.navigate(['/login']);\n    }\n    return isAuthenticated && !isAdmin;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"login-wrapper\\\">\\n    <form class=\\\"login\\\">\\n        <section class=\\\"title\\\">\\n            <h3 class=\\\"welcome\\\">Welcome to</h3>\\n            Company Product Name\\n        </section>\\n        <div class=\\\"login-group\\\">\\n            <input class=\\\"username\\\" type=\\\"text\\\" id=\\\"login_username\\\" placeholder=\\\"Username\\\">\\n            <input class=\\\"password\\\" type=\\\"password\\\" id=\\\"login_password\\\" placeholder=\\\"Password\\\">\\n            <!-- <div class=\\\"error active\\\">\\n                Invalid user name or password\\n            </div> -->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (submit)=\\\"onSubmit($event)\\\">LOGIN</button>\\n        </div>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'vwi-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(event) {\n    console.log(event);\n    this.router.navigate(['/home']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor() { }\n\n  userIsAuthenticated(): boolean {\n    return true;\n  }\n\n  userIsAdmin(): boolean {\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resort } from '../../shared/model/resort.model';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResortService {\n  private resorts: Resort[] = [];\n\n  private resortsSubject = new BehaviorSubject<Resort[]>([]);\n\n  constructor(private http: HttpClient) {\n    http.get('http://localhost:3000/api/resorts').subscribe((resorts: Resort[]) => {\n      this.resorts = resorts;\n      this.resortsSubject.next(_.cloneDeep(this.resorts));\n    });\n  }\n\n  fetchResorts() {\n    return this.resortsSubject.asObservable();\n  }\n\n  addResort(name: string, leaderId: string) {\n    const resort: Resort = {\n      id: '' + this.resorts.length + 1,\n      name: name,\n      leaderId: leaderId\n    };\n    this.resorts.push(_.cloneDeep(resort));\n    this.resortsSubject.next(_.cloneDeep(this.resorts));\n  }\n\n  deleteResort(resort: Resort) {\n    this.resorts = this.resorts.filter(r => r.id !== resort.id);\n    this.resortsSubject.next(_.cloneDeep(this.resorts));\n  }\n\n  updateResort(resort: Resort) {\n    const index = this.resorts.findIndex(r => r.id === resort.id);\n    this.resorts[index] = _.cloneDeep(resort);\n    this.resortsSubject.next(_.cloneDeep(this.resorts));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { User } from '../../shared/model/user.model';\nimport { LoginAttempt } from '../../shared/model/login-attempt.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private users: User[] = [];\n\n  private loginAttempts: LoginAttempt[] = [];\n\n  private loginAttemptsSubject = new BehaviorSubject<LoginAttempt[]>([]);\n  private usersSubject = new BehaviorSubject<User[]>([]);\n\n  constructor(private http: HttpClient) {\n    http.get('http://localhost:3000/api/users').subscribe((users: User[]) => {\n      this.users = users;\n      this.usersSubject.next(_.cloneDeep(this.users));\n    });\n    http.get('http://localhost:3000/attempts').subscribe((attempts: LoginAttempt[]) => {\n      this.loginAttempts = attempts;\n      this.loginAttemptsSubject.next(_.cloneDeep(this.loginAttempts));\n    });\n  }\n\n  fetchUsers(): Observable<User[]> {\n    return this.usersSubject.asObservable();\n  }\n\n  fetchLoginAttempts(): Observable<LoginAttempt[]> {\n    return this.loginAttemptsSubject.asObservable();\n  }\n\n  addUser(attempt: LoginAttempt, firstName: string, lastName: string) {\n    const user: User = {\n      id: attempt.id,\n      firstName: firstName,\n      lastName: lastName,\n      resortIds: [],\n      deactivated: false,\n      lastLogin: _.cloneDeep(attempt.date)\n    };\n    this.users.push(_.cloneDeep(user));\n    this.usersSubject.next(_.cloneDeep(this.users));\n  }\n\n  updateUser(user: User) {\n    const index = this.users.findIndex(u => u.id === user.id);\n    this.users[index] = _.cloneDeep(user);\n    this.usersSubject.next(_.cloneDeep(this.users));\n  }\n\n  deleteUser(user: User) {\n    this.users = this.users.filter(u => u.id !== user.id);\n    this.usersSubject.next(_.cloneDeep(this.users));\n  }\n\n  deleteLoginAttempt(attempt: LoginAttempt) {\n    this.loginAttempts = this.loginAttempts.filter(a => a.id !== attempt.id);\n    this.loginAttemptsSubject.next(_.cloneDeep(this.loginAttempts));\n  }\n\n  deactivateUser(user: User) {\n    this.users.find(u => u.id === user.id).deactivated = true;\n    this.usersSubject.next(_.cloneDeep(this.users));\n  }\n\n  activateUser(user: User) {\n    this.users.find(u => u.id === user.id).deactivated = false;\n    this.usersSubject.next(_.cloneDeep(this.users));\n  }\n\n  getUserById(id: string): User {\n    return this.users.find(u => u.id === id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}